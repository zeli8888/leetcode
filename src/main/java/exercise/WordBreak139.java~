package exercise;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

/**
 * @Author : Ze Li
 * @Date : 09/06/2025 14:59
 * @Version : V1.0
 * @Description :
 */
public class WordBreak139 {
    public static void main(String[] args) {
        WordBreak139 wordBreak139 = new WordBreak139();
        System.out.println(wordBreak139.wordBreak("aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaab",
                Arrays.asList("a", "aa", "aaa", "aaaa", "aaaaa", "aaaaaa", "aaaaaaa", "aaaaaaaa", "aaaaaaaaa", "aaaaaaaaaa")
        ));
    }
    class TrieNode {
        TrieNode[] next = new TrieNode[26];
        boolean end;
    }
    public boolean wordBreak(String s, List<String> wordDict) {
        TrieNode trie = new TrieNode();
        TrieNode start = trie;
        for (String word : wordDict) {
            for (char c : word.toCharArray()) {
                if(trie.next[c - 'a'] == null) trie.next[c - 'a'] = new TrieNode();
                trie = trie.next[c - 'a'];
            }
            trie.end = true;
            trie = start;
        }
        boolean[] tracker = new boolean[s.length()];
        return helper(s, 0, start, start, tracker);
    }

    public boolean helper(String s, int index, TrieNode start, TrieNode trie, boolean[] tracker) {
        if (index == s.length()) return false;
        char c = s.charAt(index);
        if (trie.next[c - 'a'] == null) return false;
        trie = trie.next[c - 'a'];
        if (trie.end) {
            if (index == s.length()-1) return true;
            return helper(s, index+1, start, trie, tracker) || helper(s, index+1, start, start, tracker);
        }
        return helper(s, index+1, start, trie, tracker);
    }
}
