package exercise;

/**
 * @Author : Ze Li
 * @Date : 04/01/2025 01:11
 * @Version : V1.0
 * @Description :
 */
public class MinStack155 {
    private class Node{
        private int val;
        private exercise.Node lastNode;
        private int minVal;

        public int getMinVal() {
            return minVal;
        }

        public void setMinVal(int minVal) {
            this.minVal = minVal;
        }

        public Node(int val){
            this.val = val;
            this.minVal = val;
        }

        public int getVal() {
            return val;
        }

        public void setVal(int val) {
            this.val = val;
        }

        public exercise.Node getLastNode() {
            return lastNode;
        }

        public void setLastNode(exercise.Node lastNode) {
            this.lastNode = lastNode;
            if (lastNode.getMinVal() < this.minVal){
                this.minVal = lastNode.getMinVal();
            }
        }
    }
    public static void main(String[] args) {
        MinStack155 minStack155 = new MinStack155();
        minStack155.push(1);
        minStack155.push(2);
        minStack155.push(2);
        System.out.println(minStack155.top());
        minStack155.pop();
        System.out.println(minStack155.getMin());
        minStack155.pop();
        System.out.println(minStack155.getMin());
        minStack155.pop();
        minStack155.push(3);
        System.out.println(minStack155.top());
        System.out.println(minStack155.getMin());

    }

    private Node topNode;

    public Node getTopNode() {
        return topNode;
    }

    public void setTopNode(Node topNode) {
        this.topNode = topNode;
    }

    public MinStack155() {

    }

    public void push(int val) {
        Node node = new Node(val);
        if (this.getTopNode() != null){
            node.setLastNode(this.getTopNode());
        }
        this.setTopNode(node);
    }

    public void pop() {
        this.setTopNode(this.getTopNode().getLastNode());
    }

    public int top() {
        return this.getTopNode().getVal();
    }

    public int getMin() {
        return this.getTopNode().getMinVal();
    }

}