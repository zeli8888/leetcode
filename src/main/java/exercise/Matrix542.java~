package exercise;

import java.util.Arrays;

/**
 * @Author : Ze Li
 * @Date : 14/03/2025 15:24
 * @Version : V1.0
 * @Description :
 */
public class Matrix542 {

    public int[][] updateMatrix(int[][] mat) {

    }

    public int updateMatrix(int[][] mat, int i, int j) {
        if (mat[i][j] == 0){
            return 0;
        }
        int minDis = Integer.MAX_VALUE;
        if (i <= mat.length-2 && mat[i+1][j] == -1){
            mat[i+1][j] = fillElement+1;
        }
        if (j <= mat[0].length-2 && mat[i][j+1] == -1){
            mat[i][j+1] = fillElement+1;
        }
    }
//    public int[][] updateMatrix(int[][] mat) {
//        int m = mat.length;
//        int n = mat[0].length;
//        int[][] ans = new int[m][n];
//        Arrays.stream(ans).forEach(row -> Arrays.fill(row, -1));
//        for (int i = 0; i < m; i++){
//            for (int j = 0; j < n; j++){
//                if (mat[i][j] == 0){
//                    ans[i][j] = 0;
//                }
//            }
//        }
//        int fillElement = 0;
//        while (true){
//            boolean noUpdate = true;
//            for (int i = 0; i < m; i++){
//                for (int j = 0; j < n; j++){
//                    if (ans[i][j] == fillElement){
//                        if (i >= 1 && ans[i-1][j] == -1){
//                            noUpdate = false;
//                            ans[i-1][j] = fillElement+1;
//                        }
//                        if (i <= m-2 && ans[i+1][j] == -1){
//                            noUpdate = false;
//                            ans[i+1][j] = fillElement+1;
//                        }
//                        if (j >= 1 && ans[i][j-1] == -1){
//                            noUpdate = false;
//                            ans[i][j-1] = fillElement+1;
//                        }
//                        if (j <= n-2 && ans[i][j+1] == -1){
//                            noUpdate = false;
//                            ans[i][j+1] = fillElement+1;
//                        }
//                    }
//                }
//            }
//            if (noUpdate){return ans;}
//            fillElement++;
//        }
//    }
}
