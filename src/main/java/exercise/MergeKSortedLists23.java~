package exercise;

import java.util.PriorityQueue;

/**
 * @Author : Ze Li
 * @Date : 07/06/2025 11:16
 * @Version : V1.0
 * @Description :
 */
public class MergeKSortedLists23 {
    public ListNode mergeKLists(ListNode[] lists) {
        ListNode ans = new ListNode();
        PriorityQueue<ListNode> heap = new PriorityQueue<>((a, b) -> (a.val - b.val));
        int k = lists.length;

        boolean empty = false;
        while (!empty) {
            empty = true;
            for (int i = 0; i < k; i++) {
                ListNode node = lists[i];
                empty = empty && node == null;
                ListNode temp = node.next;
                node.next = null;
                heap.add(node);
                lists[i] = temp;
            }
        }
        ListNode ansCopy = ans;
        while(!heap.isEmpty()) {
            ans.next = heap.poll();
            ans = ans.next;
        }
        return ansCopy.next;
    }
}
